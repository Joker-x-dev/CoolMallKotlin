[versions]

# 项目公共配置
# 构建版本
versionCode = "1"
# 版本号
versionName = "1.0.0"
# 名称
namespace = "com.joker.coolmall"
# sdk 配置
compileSdk = "35"
# 最低支持的 sdk 版本
minSdk = "26"
targetSdk = "35"

# 已有的插件版本可以重用
agp = "8.9.1"
kotlin = "2.1.10"

coreKtx = "1.15.0"
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
lifecycleRuntimeKtx = "2.8.7"
activityCompose = "1.9.3"
composeBom = "2024.12.01"

# 导航
navigationCompose = "2.8.9"

# 序列化
kotlinxSerializationJson = "1.8.0"

# 网络请求
okhttp = "4.12.0"
retrofit = "2.11.0"
retrofit2KotlinxSerializationConverter = "1.0.0"
# 网络请求框架日志框架
loggingInterceptor = "4.12.0"
chucker = "4.0.0"
# 日志框架
timber = "5.0.1"

# 依赖注入相关
hilt = "2.56"
hiltNavigationCompose = "1.2.0"
ksp = "2.1.10-1.0.31"

# 图片加载
coilCompose = "2.7.0"

# 模块化
appcompat = "1.7.0"
material = "1.10.0"

# 启动页
androidxCoreSplashscreen = "1.0.1"

# Toast框架
toaster = "12.8"

[libraries]
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }

# 导航
navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigationCompose" }

# 序列化
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }

# okhttp
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }

# retrofit
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }

# 网络请求框架日志框架
logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "loggingInterceptor" }

# 让Retrofit支持Kotlinx Serialization
retrofit2-kotlinx-serialization-converter = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version.ref = "retrofit2KotlinxSerializationConverter" }

# 日志框架
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }

# 依赖注入相关
ksp-gradlePlugin = { group = "com.google.devtools.ksp", name = "com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
hilt-android-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }
hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltNavigationCompose" }

# 图片加载框架
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coilCompose" }
# 模块化
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }

# 构建工具 - 使用已有的版本引用
android-gradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "agp" }
kotlin-gradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }

# 通过OkHttp的拦截器机制
# 实现在应用通知栏显示网络请求功能
chucker = { group = "com.github.chuckerteam.chucker", name = "library", version.ref = "chucker" }
chucker-no-op = { group = "com.github.chuckerteam.chucker", name = "library-no-op", version.ref = "chucker" }

# 启动页
androidx-core-splashscreen = { group = "androidx.core", name = "core-splashscreen", version.ref = "androidxCoreSplashscreen" }

# Toast框架
toaster = { group = "com.github.getActivity", name = "Toaster", version.ref = "toaster" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

# 依赖注入相关
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }

# 序列化
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
# 模块化
android-library = { id = "com.android.library", version.ref = "agp" }